/*
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 

namespace Init.SIGePro.Protocollo.EGrammata2.LeggiProtocollo
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WSRicercaProtocolloSoapBinding", Namespace = "http://10.1.1.31:8080/egrammata/services/WSRicercaProtocollo")]
    public partial class WSRicercaProtocolloService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ricercaOperationCompleted;

        private System.Threading.SendOrPostCallback ricercaNSOperationCompleted;

        /// <remarks/>
        public WSRicercaProtocolloService(string url)
        {
            this.Url = url;
        }

        /// <remarks/>
        public event ricercaCompletedEventHandler ricercaCompleted;

        /// <remarks/>
        public event ricercaNSCompletedEventHandler ricercaNSCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://protocollo.webservices.eng", ResponseNamespace = "http://10.1.1.31:8080/egrammata/services/WSRicercaProtocollo", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ricercaReturn")]
        public string ricerca(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione)
        {
            object[] results = this.Invoke("ricerca", new object[] {
                    codEnte,
                    username,
                    password,
                    indirizzoIP,
                    xml,
                    hash,
                    userApp,
                    postazione});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginricerca(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ricerca", new object[] {
                    codEnte,
                    username,
                    password,
                    indirizzoIP,
                    xml,
                    hash,
                    userApp,
                    postazione}, callback, asyncState);
        }

        /// <remarks/>
        public string Endricerca(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ricercaAsync(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione)
        {
            this.ricercaAsync(codEnte, username, password, indirizzoIP, xml, hash, userApp, postazione, null);
        }

        /// <remarks/>
        public void ricercaAsync(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione, object userState)
        {
            if ((this.ricercaOperationCompleted == null))
            {
                this.ricercaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnricercaOperationCompleted);
            }
            this.InvokeAsync("ricerca", new object[] {
                    codEnte,
                    username,
                    password,
                    indirizzoIP,
                    xml,
                    hash,
                    userApp,
                    postazione}, this.ricercaOperationCompleted, userState);
        }

        private void OnricercaOperationCompleted(object arg)
        {
            if ((this.ricercaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ricercaCompleted(this, new ricercaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace = "http://protocollo.webservices.eng", ResponseNamespace = "http://10.1.1.31:8080/egrammata/services/WSRicercaProtocollo", Use = System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("ricercaNSReturn")]
        public string ricercaNS(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione)
        {
            object[] results = this.Invoke("ricercaNS", new object[] {
                    codEnte,
                    username,
                    password,
                    indirizzoIP,
                    xml,
                    hash,
                    userApp,
                    postazione});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginricercaNS(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ricercaNS", new object[] {
                    codEnte,
                    username,
                    password,
                    indirizzoIP,
                    xml,
                    hash,
                    userApp,
                    postazione}, callback, asyncState);
        }

        /// <remarks/>
        public string EndricercaNS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ricercaNSAsync(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione)
        {
            this.ricercaNSAsync(codEnte, username, password, indirizzoIP, xml, hash, userApp, postazione, null);
        }

        /// <remarks/>
        public void ricercaNSAsync(string codEnte, string username, string password, string indirizzoIP, string xml, string hash, string userApp, string postazione, object userState)
        {
            if ((this.ricercaNSOperationCompleted == null))
            {
                this.ricercaNSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnricercaNSOperationCompleted);
            }
            this.InvokeAsync("ricercaNS", new object[] {
                    codEnte,
                    username,
                    password,
                    indirizzoIP,
                    xml,
                    hash,
                    userApp,
                    postazione}, this.ricercaNSOperationCompleted, userState);
        }

        private void OnricercaNSOperationCompleted(object arg)
        {
            if ((this.ricercaNSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ricercaNSCompleted(this, new ricercaNSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ricercaCompletedEventHandler(object sender, ricercaCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ricercaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ricercaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void ricercaNSCompletedEventHandler(object sender, ricercaNSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ricercaNSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ricercaNSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }


}
*/