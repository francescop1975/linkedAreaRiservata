//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Init.SIGePro.Manager.Utils;
using Init.SIGePro.Protocollo.Constants;
using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Net;
using System.Net.Security;
using System.ServiceModel;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 

namespace Init.SIGePro.Protocollo.Iride.PosteWeb
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "WsPostaWebSoap", Namespace = "http://tempuri.org/")]
    public partial class WsPostaWeb : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback VerificaInvioOperationCompleted;

        private System.Threading.SendOrPostCallback InviaMailInteropOperationCompleted;

        private System.Threading.SendOrPostCallback InviaMailOperationCompleted;

        /// <remarks/>
        public WsPostaWeb(string url, string proxyAddress)
        {
            this.Url = url;
            this.Timeout = 600000;

            if (!String.IsNullOrEmpty(proxyAddress))
            {
                this.Proxy = new WebProxy(proxyAddress, true);

                var endPointAddress = new EndpointAddress(url);

                if (endPointAddress.Uri.Scheme.ToLower() == ProtocolloConstants.HTTPS)
                {
                    new Tls12Utils().ApplicaImpostazioniTls12(endPointAddress.Uri.AbsoluteUri);

                    //Trust all certificates
                    System.Net.ServicePointManager.ServerCertificateValidationCallback =
                        ((sender, certificate, chain, sslPolicyErrors) => true);

                    //// trust sender
                    //System.Net.ServicePointManager.ServerCertificateValidationCallback
                    //                = ((sender, cert, chain, errors) => true);

                    //// validate cert by calling a function
                    //ServicePointManager.ServerCertificateValidationCallback += new RemoteCertificateValidationCallback(ValidateRemoteCertificate);
                }
            }
        }

        private bool ValidateRemoteCertificate(object sender, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Security.Cryptography.X509Certificates.X509Chain chain, SslPolicyErrors sslPolicyErrors)
        {
            return true;
        }

        /// <remarks/>
        public event VerificaInvioCompletedEventHandler VerificaInvioCompleted;

        /// <remarks/>
        public event InviaMailInteropCompletedEventHandler InviaMailInteropCompleted;

        /// <remarks/>
        public event InviaMailCompletedEventHandler InviaMailCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaInvio", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificaInvio(string strXML, string CodiceAmministrazione, string CodiceAOO)
        {
            object[] results = this.Invoke("VerificaInvio", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginVerificaInvio(string strXML, string CodiceAmministrazione, string CodiceAOO, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("VerificaInvio", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO}, callback, asyncState);
        }

        /// <remarks/>
        public string EndVerificaInvio(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void VerificaInvioAsync(string strXML, string CodiceAmministrazione, string CodiceAOO)
        {
            this.VerificaInvioAsync(strXML, CodiceAmministrazione, CodiceAOO, null);
        }

        /// <remarks/>
        public void VerificaInvioAsync(string strXML, string CodiceAmministrazione, string CodiceAOO, object userState)
        {
            if ((this.VerificaInvioOperationCompleted == null))
            {
                this.VerificaInvioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaInvioOperationCompleted);
            }
            this.InvokeAsync("VerificaInvio", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO}, this.VerificaInvioOperationCompleted, userState);
        }

        private void OnVerificaInvioOperationCompleted(object arg)
        {
            if ((this.VerificaInvioCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaInvioCompleted(this, new VerificaInvioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InviaMailInterop", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InviaMailInterop(string strXML, string CodiceAmministrazione, string CodiceAOO)
        {
            object[] results = this.Invoke("InviaMailInterop", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInviaMailInterop(string strXML, string CodiceAmministrazione, string CodiceAOO, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InviaMailInterop", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO}, callback, asyncState);
        }

        /// <remarks/>
        public string EndInviaMailInterop(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void InviaMailInteropAsync(string strXML, string CodiceAmministrazione, string CodiceAOO)
        {
            this.InviaMailInteropAsync(strXML, CodiceAmministrazione, CodiceAOO, null);
        }

        /// <remarks/>
        public void InviaMailInteropAsync(string strXML, string CodiceAmministrazione, string CodiceAOO, object userState)
        {
            if ((this.InviaMailInteropOperationCompleted == null))
            {
                this.InviaMailInteropOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInviaMailInteropOperationCompleted);
            }
            this.InvokeAsync("InviaMailInterop", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO}, this.InviaMailInteropOperationCompleted, userState);
        }

        private void OnInviaMailInteropOperationCompleted(object arg)
        {
            if ((this.InviaMailInteropCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InviaMailInteropCompleted(this, new InviaMailInteropCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InviaMail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InviaMail(string strXML, string CodiceAmministrazione, string CodiceAOO)
        {
            object[] results = this.Invoke("InviaMail", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInviaMail(string strXML, string CodiceAmministrazione, string CodiceAOO, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InviaMail", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO}, callback, asyncState);
        }

        /// <remarks/>
        public string EndInviaMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void InviaMailAsync(string strXML, string CodiceAmministrazione, string CodiceAOO)
        {
            this.InviaMailAsync(strXML, CodiceAmministrazione, CodiceAOO, null);
        }

        /// <remarks/>
        public void InviaMailAsync(string strXML, string CodiceAmministrazione, string CodiceAOO, object userState)
        {
            if ((this.InviaMailOperationCompleted == null))
            {
                this.InviaMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInviaMailOperationCompleted);
            }
            this.InvokeAsync("InviaMail", new object[] {
                    strXML,
                    CodiceAmministrazione,
                    CodiceAOO}, this.InviaMailOperationCompleted, userState);
        }

        private void OnInviaMailOperationCompleted(object arg)
        {
            if ((this.InviaMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InviaMailCompleted(this, new InviaMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void VerificaInvioCompletedEventHandler(object sender, VerificaInvioCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaInvioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal VerificaInvioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void InviaMailInteropCompletedEventHandler(object sender, InviaMailInteropCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InviaMailInteropCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InviaMailInteropCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void InviaMailCompletedEventHandler(object sender, InviaMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InviaMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InviaMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}